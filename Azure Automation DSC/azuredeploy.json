{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "dcType": {
        "type": "string",
        "allowedValues": [
          "FirstDC",
          "AdditionalDC"
        ],
        "defaultValue": "AdditionalDC",
        "metadata": {
          "description": "Is it the first domain controller (new domain/forest) or will you be adding one?"
        }
      },
      "adminUsername": {
        "type": "string",
        "metadata": {
          "description": "User name for the Virtual Machine."
        }
      },
      "adminPassword": {
        "type": "securestring",
        "metadata": {
          "description": "Password for the Virtual Machine."
        }
      },
      "numberOfInstances": {
        "type": "int",
        "defaultValue": 2,
        "minValue": 2,
        "maxValue": 5,
        "metadata": {
          "description": "Number of VMs to deploy, limit 5 since this sample is using a single storage account"
        }
      },
      "virtualMachineName": {
        "type": "string"
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "existingVirtualNetworkName": {
        "type": "string",
        "metadata": {
          "description": "Name of the existing VNET"
        }
      },
      "existingVirtualNetworkResourceGroup": {
        "type": "string",
        "metadata": {
          "description": "Name of the existing VNET resource group"
        }
      },
      "existingSubnetName": {
        "type": "string",
        "metadata": {
          "description": "Name of the subnet in the virtual network you want to use"
        }
      },
      "dscRegistrationKey": {
        "type": "string",
        "metadata": {
          "description": "Registration key to use to onboard to the Azure Automation DSC pull/reporting server"
        }
      },
      "dscRegistrationUrl": {
        "type": "string",
        "metadata": {
          "description": "Registration url of the Azure Automation DSC pull/reporting server"
        }
      }
    },
    "variables": {
      "availabilitySetName": "availabilitySetOffice365HA",
      "vmSize": "Standard_B2s",
      "imagePublisher": "MicrosoftWindowsServer",
      "imageOffer": "WindowsServer",
      "windowsOSVersion": "2016-Datacenter",
      "storageAccountType": "Standard_LRS",
      "vnetName": "[parameters('existingVirtualNetworkName')]",
      "vnetRG": "[parameters('existingVirtualNetworkResourceGroup')]",
      "vnetSubnet": "[parameters('existingSubnetName')]",
      "vnetID": "[resourceId(variables('vnetRG'), 'Microsoft.Network/virtualNetworks', variables('vnetName'))]",
      "subnetRef": "[concat(variables('vnetID'),'/subnets/', variables('vnetSubnet'))]",
      "apiVersionVM": "2017-12-01",
      "apiVersionNic": "2018-04-01",
      "dscLinkedTemplateUri":  "https://raw.githubusercontent.com/pthoor/AzureARMTemplates/master/Azure%20Automation%20DSC/Register%20VM/azuredeploy.json",
      "dscRegistrationKey": "[parameters('dscRegistrationKey')]",
      "dscRegistrationUrl": "[parameters('dscRegistrationUrl')]",
      "dscNodeConfigurationName": "[concat('ADDSExistingDomain.','localhost')]",
      "updateip_templateUri": "https://raw.githubusercontent.com/kvaes/TasmanianTraders-IaC-ActiveDirectory/master/update-nic.json"
    },
    "functions": [{
      "namespace": "myFunctions",
      "members": {
          "vmName": {
              "parameters": [{
                      "name": "inputNameVM",
                      "type": "string"
                  },
                  {
                      "name": "indexvm",
                      "type": "int"
                  }
              ],
              "output": {
                  "type": "string",
                  "value": "[concat(toLower(parameters('inputNameVM')), padLeft(parameters('indexvm'),2,'0'))]"
              }
          },
          "diskName": {
              "parameters": [{
                      "name": "inputNameDisk",
                      "type": "string"
                  },
                  {
                      "name": "indexdisk",
                      "type": "int"
                  }
              ],
              "output": {
                  "type": "string",
                  "value": "[concat(toLower(parameters('inputNameDisk')), padLeft(parameters('indexdisk'),2,'0'), '-osdisk')]"
              }
          },
          "nicName": {
              "parameters": [{
                      "name": "inputNameNic",
                      "type": "string"
                  },
                  {
                      "name": "indexnic",
                      "type": "int"
                  }
              ],
              "output": {
                  "type": "string",
                  "value": "[concat(toLower(parameters('inputNameNic')), padLeft(parameters('indexnic'),2,'0'), '-nic')]"
              }
          }
      }
  }],
    "resources": [
      {
        "type": "Microsoft.Compute/availabilitySets",
        "name": "[variables('availabilitySetName')]",
        "apiVersion": "2016-04-30-preview",
        "location": "[parameters('location')]",
        "properties": {
          "platformFaultDomainCount": 3,
          "platformUpdateDomainCount": "5",
          "managed": true
        }
      },
      {
        "apiVersion": "[variables('apiVersionNic')]",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[myFunctions.nicName(parameters('virtualMachineName'),copyindex(1))]",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "nicLoop",
          "count": "[parameters('numberOfInstances')]"
        },
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Dynamic",
                "subnet": {
                  "id": "[variables('subnetRef')]"
                }
              }
            }
          ]
        }
      },
      {
        "apiVersion": "[variables('apiVersionVM')]",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[myFunctions.vmName(parameters('virtualMachineName'),copyindex(1))]",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "virtualMachineLoop",
          "count": "[parameters('numberOfInstances')]"
        },
        "dependsOn": [
          "nicLoop"
        ],
        "properties": {
          "availabilitySet":{
            "id": "[resourceId('Microsoft.Compute/availabilitySets', variables('availabilitySetName'))]"
          },
          "hardwareProfile": {
            "vmSize": "[variables('vmSize')]"
          },
          "osProfile": {
            "computerName": "[myFunctions.vmName(parameters('virtualMachineName'),copyindex(1))]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "windowsConfiguration": {
              "provisionVMAgent": true,
              "enableAutomaticUpdates": true
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[variables('windowsOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "[myFunctions.diskName(parameters('virtualMachineName'),copyindex(1))]",
              "createOption": "FromImage",
              "managedDisk": {
                "storageAccountType": "[variables('storageAccountType')]"
              }
            },
            "dataDisks": []
          },
          "networkProfile": {
            "networkInterfaces": [
              {
                "id": "[resourceId('Microsoft.Network/networkInterfaces', myFunctions.nicName(parameters('virtualMachineName'),copyindex(1)))]"
              }
            ]
          }
        }
      },
      { 
        "apiVersion": "2015-01-01", 
        "name": "[concat('linkedTemplateDscPullServer', copyIndex())]", 
        "type": "Microsoft.Resources/deployments",
        "dependsOn": [
          "virtualMachineLoop",
          "linkedTemplateUpdateIpLoop"
        ],
        "properties": { 
          "mode": "Incremental", 
          "templateLink": {
            "uri": "[variables('dscLinkedTemplateUri')]",
            "contentVersion": "1.0.0.0"
          }, 
          "parameters": { 
            "vmName":{
              "value": "[myFunctions.vmName(parameters('virtualMachineName'),copyindex(1))]"
            },
            "registrationKey":{
              "value": "[variables('dscRegistrationKey')]"
            },
            "registrationUrl":{
              "value": "[variables('dscRegistrationUrl')]"
            },
            "nodeConfigurationName":{
              "value": "[variables('dscNodeConfigurationName')]"
            } 
          } 
        },
        "copy": {
          "name": "linkedTemplateDscPullServerLoop",
          "count": "[parameters('numberOfInstances')]"
        } 
      },
      {
        "type": "Microsoft.Resources/deployments",
        "name": "[concat('linkedTemplateUpdateIp', copyindex())]",
        "apiVersion": "2015-01-01",
        "dependsOn": [
          "virtualMachineLoop"
        ],
        "properties": {
          "mode": "Incremental",
          "templateLink": {
            "uri": "[variables('updateip_templateUri')]",
            "contentVersion": "1.0.0.0"
          },
          "parameters": {
            "nicName": {
              "value": "[myFunctions.nicName(parameters('virtualMachineName'),copyindex(1))]"
            },
            "SubnetRef": {
              "value": "[variables('SubnetRef')]"
            },
            "privateIp": {
              "value": "[reference(concat('Microsoft.Network/networkInterfaces/', myFunctions.nicName(parameters('virtualMachineName'),copyindex(1)))).ipConfigurations[0].properties.privateIPAddress]"
            }
          }
        },
        "copy": {
          "name": "linkedTemplateUpdateIpLoop",
          "count": "[parameters('numberOfInstances')]"
        }
      }
    ]
  }